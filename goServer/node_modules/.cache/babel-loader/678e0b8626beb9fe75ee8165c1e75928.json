{"remainingRequest":"/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/babel-loader/lib/index.js!/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/eslint-loader/index.js??ref--13-0!/home/wushili/Desktop/myStudy/WaifuFromSketch/src/api/api.js","dependencies":[{"path":"/home/wushili/Desktop/myStudy/WaifuFromSketch/src/api/api.js","mtime":1574409540031},{"path":"/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/cache-loader/dist/cjs.js","mtime":1572924774051},{"path":"/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/babel-loader/lib/index.js","mtime":1572924773995},{"path":"/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/eslint-loader/index.js","mtime":1572924774347}],"contextDependencies":[],"result":["import _Promise from \"/home/wushili/Desktop/myStudy/WaifuFromSketch/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport store from '../util/store'; // import bus from '../util/bus'\n// const API_URL = 'http://localhost:9000/'\n\nvar API_URL = 'http://drawstickserver.ngrok.io';\n\nvar createApiAxios = function createApiAxios() {\n  var myAxios = axios.create({\n    baseURL: API_URL,\n    timeout: 5000000,\n    headers: {\n      // 'Access-Control-Allow-Origin': '*',\n      'X-Token': store.token\n    } // crossDomain: true\n\n  }); // 请求拦截器，根据配置增加merchantOpenId参数\n\n  myAxios.interceptors.request.use(function (config) {\n    if (config.withMerchantOpenId) {\n      var params = config.params || {};\n      params.merchantOpenId = store.merchantInfo.merchantOpenId;\n      config.params = params;\n    }\n\n    if (config.formData) {\n      config.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      config.data = qs.stringify(config.data);\n    }\n\n    return config;\n  }, function (error) {\n    return _Promise.reject(error);\n  }); // 响应拦截器，根据错误消息，在bus上发起响应事件\n\n  /*\n  myAxios.interceptors.response.use(function (response) {\n    if (response.status === 200 && response.data) {\n      let data = response.data\n      if (data && data.resCode === '0') {\n        return Promise.resolve(response.data)\n      } else {\n        bus.$emit('apiError', data)\n        console.log(`接口错误: ${data.resDesc}`)\n        return Promise.reject(new Error(`接口错误: ${data.resDesc}`))\n      }\n    } else {\n      bus.$emit('networkError', `网络错误: ${response.status}`)\n      console.log(`网络错误: ${response.status}`)\n      return Promise.reject(new Error(`网络错误: ${response.status}`))\n    }\n  }, function (error) {\n    bus.$emit('networkError', `网络错误: ${error}`)\n    console.log(`网络错误: ${error}`)\n    return Promise.reject(error)\n  })*/\n\n  return myAxios;\n};\n\nvar apiAxios = createApiAxios();\nexport var uploadPict = function uploadPict(params) {\n  return apiAxios.get('v1/pict', {\n    params: params\n  });\n};",{"version":3,"sources":["/home/wushili/Desktop/myStudy/WaifuFromSketch/src/api/api.js"],"names":["axios","qs","store","API_URL","createApiAxios","myAxios","create","baseURL","timeout","headers","token","interceptors","request","use","config","withMerchantOpenId","params","merchantOpenId","merchantInfo","formData","data","stringify","error","reject","apiAxios","uploadPict","get"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;AAEA;;AACA,IAAMC,OAAO,GAAG,iCAAhB;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAY;AAC/B,MAAIC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,IAAAA,OAAO,EAAEJ,OADgB;AAEzBK,IAAAA,OAAO,EAAE,OAFgB;AAGzBC,IAAAA,OAAO,EAAE;AACP;AACA,iBAAWP,KAAK,CAACQ;AAFV,KAHgB,CAOzB;;AAPyB,GAAb,CAAd,CAD+B,CAW/B;;AACAL,EAAAA,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;AAEjD,QAAIA,MAAM,CAACC,kBAAX,EAA+B;AAC7B,UAAIC,MAAM,GAAGF,MAAM,CAACE,MAAP,IAAiB,EAA9B;AACAA,MAAAA,MAAM,CAACC,cAAP,GAAwBf,KAAK,CAACgB,YAAN,CAAmBD,cAA3C;AACAH,MAAAA,MAAM,CAACE,MAAP,GAAgBA,MAAhB;AACD;;AACD,QAAIF,MAAM,CAACK,QAAX,EAAqB;AACnBL,MAAAA,MAAM,CAACL,OAAP,CAAe,cAAf,IAAiC,kDAAjC;AACAK,MAAAA,MAAM,CAACM,IAAP,GAAcnB,EAAE,CAACoB,SAAH,CAAaP,MAAM,CAACM,IAApB,CAAd;AACD;;AACD,WAAON,MAAP;AACD,GAZD,EAYG,UAAUQ,KAAV,EAAiB;AAClB,WAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACD,GAdD,EAZ+B,CA4B/B;;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAOjB,OAAP;AACD,CAnDD;;AAqDA,IAAImB,QAAQ,GAAGpB,cAAc,EAA7B;AAEA,OAAO,IAAMqB,UAAU,GAAG,SAAbA,UAAa,CAACT,MAAD,EAAY;AACpC,SAAOQ,QAAQ,CAACE,GAAT,CAAa,SAAb,EAAwB;AAC7BV,IAAAA,MAAM,EAAEA;AADqB,GAAxB,CAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nimport store from '../util/store'\n// import bus from '../util/bus'\n\n// const API_URL = 'http://localhost:9000/'\nconst API_URL = 'http://drawstickserver.ngrok.io'\n\nlet createApiAxios = function () {\n  let myAxios = axios.create({\n    baseURL: API_URL,\n    timeout: 5000000,\n    headers: {\n      // 'Access-Control-Allow-Origin': '*',\n      'X-Token': store.token\n    },\n    // crossDomain: true\n  })\n\n  // 请求拦截器，根据配置增加merchantOpenId参数\n  myAxios.interceptors.request.use(function (config) {\n    \n    if (config.withMerchantOpenId) {\n      let params = config.params || {}\n      params.merchantOpenId = store.merchantInfo.merchantOpenId\n      config.params = params\n    }\n    if (config.formData) {\n      config.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8'\n      config.data = qs.stringify(config.data)\n    }\n    return config\n  }, function (error) {\n    return Promise.reject(error)\n  })\n\n  // 响应拦截器，根据错误消息，在bus上发起响应事件\n  /*\n  myAxios.interceptors.response.use(function (response) {\n    if (response.status === 200 && response.data) {\n      let data = response.data\n      if (data && data.resCode === '0') {\n        return Promise.resolve(response.data)\n      } else {\n        bus.$emit('apiError', data)\n        console.log(`接口错误: ${data.resDesc}`)\n        return Promise.reject(new Error(`接口错误: ${data.resDesc}`))\n      }\n    } else {\n      bus.$emit('networkError', `网络错误: ${response.status}`)\n      console.log(`网络错误: ${response.status}`)\n      return Promise.reject(new Error(`网络错误: ${response.status}`))\n    }\n  }, function (error) {\n    bus.$emit('networkError', `网络错误: ${error}`)\n    console.log(`网络错误: ${error}`)\n    return Promise.reject(error)\n  })*/\n  return myAxios\n}\n\nlet apiAxios = createApiAxios()\n\nexport const uploadPict = (params) => {\n  return apiAxios.get('v1/pict', {\n    params: params\n  })\n}\n"]}]}